buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
//        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.2.6.RELEASE"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE"
    }
}


plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}
bootJar {
    enabled = false
}
group 'com.jordanec.store'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}


ext {
    set('springCloudVersion', "Hoxton.SR8")
}

allprojects {
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter')

//        implementation 'org.springframework.kafka:spring-kafka'
//        implementation 'org.springframework.cloud:spring-cloud-starter-stream-kafka:3.1.3'
//        implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka-streams:3.1.3'

        implementation 'org.mapstruct:mapstruct:1.4.2.Final'

        implementation 'com.github.javafaker:javafaker:1.0.2'

        compileOnly 'org.projectlombok:lombok:1.18.20'

        compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
        compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5'

        compile group: 'io.cucumber', name: 'cucumber-java', version: '6.9.1'
        compile group: 'io.cucumber', name: 'cucumber-junit-platform-engine', version: '6.9.1'
        compile group: 'io.cucumber', name: 'cucumber-spring', version: '6.9.1'

        annotationProcessor 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
        testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation 'org.springframework.kafka:spring-kafka-test'
        testImplementation 'io.cucumber:cucumber-java:6.8.1'

        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'io.cucumber', name: 'cucumber-junit', version: '6.9.1'


    }
    sourceSets {
        test.java.srcDirs += 'src/integration-test/java'
        test.java.srcDirs += 'src/test/java'
        test.resources.srcDirs += 'src/integration-test/resources'
        test.resources.srcDirs += 'src/test/resources'
    }
}

project(':dtos'){
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'

}

project(':producer'){
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        implementation project(':dtos')
    }
}

project(':processor'){
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        implementation project(':dtos')
    }
}

project(':consumer'){
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    dependencies {
        implementation project(':dtos')
    }
}

sourceSets{
    test {
        java.srcDirs = ['src/test/java','src/integration-test/java']
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty', '--plugin', 'json:target/cucumber-report.json', '--glue', 'cucumber', 'src/integration-test/resources/features']
        }
    }
}