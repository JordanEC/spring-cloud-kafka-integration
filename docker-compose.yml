version: '3.5'
services:
  mysql:
    image: mysql
    container_name: mysql
    environment:
#      - MYSQL_USER=store
#      - MYSQL_PASSWORD=store
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3306:3306"
#    entrypoint:
#      sh -c "
#      echo '' > /docker-entrypoint-initdb.d/init.sql;
#      /usr/local/bin/docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
#      "
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
#  zookeeper-2:
#    image: confluentinc/cp-zookeeper:latest
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - 32181:2181

  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    depends_on:
      - zookeeper-1
#      - zookeeper-2
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#  kafka-2:
#    image: confluentinc/cp-kafka:latest
#    depends_on:
#      - zookeeper-1
#      - zookeeper-2
#    ports:
#      - 39092:39092
#    environment:
#      KAFKA_BROKER_ID: 2
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#---

#  zookeeper:
#    image: wurstmeister/zookeeper
#    ports:
#      - "2181:2181"

#  kafka-service:
##    build: .
#    image: wurstmeister/kafka
#    container_name: kafka-service
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: kafka-service
#      KAFKA_CREATE_TOPICS: "test:1:1,order-events:3:1"
##      KAFKA_CREATE_TOPICS: "test:1:1,order-events:3:3" -> ERROR org.apache.kafka.common.errors.InvalidReplicationFactorException: Replication factor: 3 larger than available brokers: 1.
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

#  store-producer:
#    image: jordanec/store-producer:latest
#    build:
#      context: ./
#      dockerfile: producer/Dockerfile
#    ports:
#      - 8080:8080
#    container_name: store-producer
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      WAIT_BEFORE_HOSTS: 5
#      WAIT_HOSTS: mysql:3306
#      LOGGING_LEVEL_ROOT: INFO
##    volumes:
##      - /data/spring-boot-app

#  store-consumer:
#    image: jordanec/store-consumer:latest
#    build:
#      context: ./
#      dockerfile: consumer/Dockerfile
#    ports:
#      - 8081:8081
#    container_name: store-consumer
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      WAIT_BEFORE_HOSTS: 10
#      WAIT_HOSTS: store-producer:8080
#      LOGGING_LEVEL_ROOT: INFO
